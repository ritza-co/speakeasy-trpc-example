/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class FindByProductCodeRequest extends SpeakeasyBase {
    /**
     * The product code of the drink
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=code" })
    code: string;
}

export class FindByProductCodeDefaultApplicationJSONIssues extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message: string;
}

/**
 * Error response
 */
export class FindByProductCodeDefaultApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "code" })
    code: string;

    @SpeakeasyMetadata({ elemType: FindByProductCodeDefaultApplicationJSONIssues })
    @Expose({ name: "issues" })
    @Type(() => FindByProductCodeDefaultApplicationJSONIssues)
    issues?: FindByProductCodeDefaultApplicationJSONIssues[];

    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message: string;
}

/**
 * The type of drink
 */
export enum FindByProductCode200ApplicationJSONDrinkType {
    NonAlcoholic = "NON_ALCOHOLIC",
    Beer = "BEER",
    Wine = "WINE",
    Spirit = "SPIRIT",
    Other = "OTHER",
}

export class FindByProductCode200ApplicationJSONDrink extends SpeakeasyBase {
    /**
     * A description of the drink
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description: string;

    /**
     * The name of the drink
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    /**
     * The price of the drink
     */
    @SpeakeasyMetadata()
    @Expose({ name: "price" })
    price: number;

    /**
     * The product code of the drink
     */
    @SpeakeasyMetadata()
    @Expose({ name: "productCode" })
    productCode: string;

    /**
     * The number of drinks in stock
     */
    @SpeakeasyMetadata()
    @Expose({ name: "stock" })
    stock: number;

    /**
     * The type of drink
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type: FindByProductCode200ApplicationJSONDrinkType;
}

/**
 * Successful response
 */
export class FindByProductCode200ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "drink" })
    @Type(() => FindByProductCode200ApplicationJSONDrink)
    drink?: FindByProductCode200ApplicationJSONDrink;
}

export class FindByProductCodeResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * Successful response
     */
    @SpeakeasyMetadata()
    findByProductCode200ApplicationJSONObject?: FindByProductCode200ApplicationJSON;

    /**
     * Error response
     */
    @SpeakeasyMetadata()
    findByProductCodeDefaultApplicationJSONObject?: FindByProductCodeDefaultApplicationJSON;
}
